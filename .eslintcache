[{"/Users/beta/React-progetti/color-grading/inizio/src/index.js":"1","/Users/beta/React-progetti/color-grading/inizio/src/App.js":"2","/Users/beta/React-progetti/color-grading/inizio/src/components/ColorGrading.js":"3","/Users/beta/React-progetti/color-grading/inizio/src/components/SingleColor.js":"4","/Users/beta/React-progetti/color-grading/inizio/src/utils/helpers.js":"5"},{"size":250,"mtime":1687626324392,"results":"6","hashOfConfig":"7"},{"size":173,"mtime":1687626324390,"results":"8","hashOfConfig":"7"},{"size":1852,"mtime":1689582451044,"results":"9","hashOfConfig":"7"},{"size":375,"mtime":1689603090443,"results":"10","hashOfConfig":"7"},{"size":208,"mtime":1689601284101,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"149v2b6",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/beta/React-progetti/color-grading/inizio/src/index.js",[],["24","25"],"/Users/beta/React-progetti/color-grading/inizio/src/App.js",[],"/Users/beta/React-progetti/color-grading/inizio/src/components/ColorGrading.js",["26"],"import React, { useState, useEffect } from \"react\";\nimport Values from \"values.js\";\nimport SingleColor from \"./SingleColor\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ColorGrading = () => {\n\n  const [selectedColor, setSelectedColor] = useState([]);\n\n  const [colorInput, setColorInput] = useState({\n    color: \"\",\n    qty: 5\n  });\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (colorInput.color && colorInput.qty) {\n      const { color, qty } = colorInput;\n\n      setSelectedColor(\n        new Values(color).all(Math.round(100 / parseInt(qty, 10)) * 2)\n      );\n    }\n\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setColorInput({\n      ...colorInput,\n      [name]: value\n    });\n  };\n\n  console.log(selectedColor);\n  return (\n    <>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"input-group\">\n\n          <input\n            type=\"text\"\n            name=\"color\"\n            id=\"color\"\n            value={colorInput.color}\n            maxLength={7}\n            onChange={handleChange}\n            className=\"input\"\n          ></input>\n\n          <input\n            type=\"number\"\n            name=\"qty\"\n            id=\"qty\"\n            value={colorInput.qty}\n            max={100}\n            min={5}\n            step={5}\n            onChange={handleChange}\n            className=\"input\"\n          ></input>\n\n        </div>\n\n        <button className=\"btn btn-selector\" type=\"submit\">\n          Create\n        </button>\n\n      </form>\n\n      <section className=\"color-section\">\n        {\n          selectedColor.length > 0 ? (\n            selectedColor.map((el) => <SingleColor key={uuidv4()} {...el} />)\n          ) : (\n            <h4>\n              Loading...\n            </h4>\n          )\n        }\n      </section>\n    </>\n  );\n};\n\nexport default ColorGrading; \n","/Users/beta/React-progetti/color-grading/inizio/src/components/SingleColor.js",[],"/Users/beta/React-progetti/color-grading/inizio/src/utils/helpers.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":27,"nodeType":"33","messageId":"34","endLine":1,"endColumn":36},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]